from common import FormatTime, ShowButtons
from telebot.types import Message
from common import Stamp, GetPriceGood, HandleMedia
from connect import GetConCur
from source import (BOT, WALLET_BTNS,
                    STATUS_BTNS,
                    MENU_BTNS, BOUGHT_BTNS,
                    POOL, TIME_BEFORE_BUYOUT,
                    WB_PATTERN)


def ShowAvailableBuyouts(message: Message) -> None:
    with GetConCur(POOL) as (con, cur):
        cur.execute('SELECT * FROM available')
        buyout = cur.fetchone()
        if buyout:
            already_taken_num = cur.execute("""
                                        SELECT COUNT(*)
                                        FROM buyouts
                                        WHERE user_id = %s
                                        AND fact_time IS NULL
                                        """, (message.from_user.id,))
            if already_taken_num:
                BOT.send_message(message.from_user.id, '‚ùå –í—ã —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—ã–∫—É–ø!')
                ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')
                return
            buyout_id, planned_time = buyout
            message_text = f'üïò –ë–ª–∏–∂–∞–π—à–∏–π –≤—ã–∫—É–ø –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞: {FormatTime(planned_time)}\n' \
                           f'–ì–æ—Ç–æ–≤—ã –≤–∑—è—Ç—å?'
            ShowButtons(BOT, message.from_user.id, WALLET_BTNS, message_text)
            BOT.register_next_step_handler(message, TakeBuyout, buyout_id)
        else:
            BOT.send_message(message.from_user.id, 'ü´§ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—ã–∫—É–ø–æ–≤!')
            ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')


def TakeBuyout(message: Message, buyout_id: int) -> None:
    if message.text == WALLET_BTNS[0]:
        try:
            with GetConCur(POOL) as (con, cur):
                cur.execute("UPDATE buyouts SET user_id = %s WHERE id = %s", (message.from_user.id, buyout_id))
                con.commit()
            BOT.send_message(message.from_user.id, '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—ã–∫—É–ø!\n'
                                                   f'–ó–∞ {TIME_BEFORE_BUYOUT} –º–∏–Ω—É—Ç –¥–æ –≤—ã–∫—É–ø–∞ —è –Ω–∞–ø–æ–º–Ω—é –≤–∞–º!')
        except Exception as e:
            BOT.send_message(message.from_user.id, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–∞ –≤—ã–∫—É–ø!')
            Stamp(f'Error while taking buyout: {str(e)}', 'e')
    else:
        BOT.send_message(message.from_user.id, '‚ùå –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å –Ω–∞ –≤—ã–∫—É–ø!')
        ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')


def AfterOrder(message: Message, buyout_id: int, nmid: int) -> None:
    if message.text == BOUGHT_BTNS[0]:
        # with GetConCur(POOL) as (con, cur):
        #     cur.execute("UPDATE buyouts SET fact_time = NOW() WHERE id = %s", (buyout_id,))
        BOT.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ üíæ')
        BOT.register_next_step_handler(message, AcceptHistory)
    else:
        BOT.send_message(message.from_user.id, '‚ùå –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞!')
        ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')


def AcceptHistory(message: Message) -> None:
    Stamp(f'User {message.from_user.id} uploading history', 'i')
    HandleMedia(message, 'photo_hist_link', f'{message.from_user.id}_history.jpg', False, 'buyouts')
    BOT.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ photo_good_link???')
    BOT.register_next_step_handler(message, AcceptGood)


def AcceptGood(message: Message) -> None:
    Stamp(f'User {message.from_user.id} uploading good', 'i')
    HandleMedia(message, 'photo_good_link', f'{message.from_user.id}_good.jpg', False, 'buyouts')
    ShowButtons(BOT, message.from_user.id, MENU_BTNS, 'üîÑ –°–ø–∞—Å–∏–±–æ, –≤—ã–∫—É–ø –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!')


def ShowMyBuyouts(message: Message) -> None:
    if message.text == STATUS_BTNS[0]:
        with GetConCur(POOL) as (con, cur):
            cur.execute("SELECT pick_point_id, plan_time, delivery_time,"
                        "feedback, price, good_link, request"
                        "FROM buyouts JOIN plans on buyouts.plan_id = plans.id"
                        "WHERE user_id = %s AND fact_time IS NULL", (message.from_user.id,))
    elif message.text == STATUS_BTNS[1]:
        with GetConCur(POOL) as (con, cur):
            cur.execute("SELECT pick_point_id, plan_time, delivery_time,"
                        "feedback, price, good_link, request"
                        "FROM buyouts JOIN plans on buyouts.plan_id = plans.id"
                        "WHERE user_id = %s AND fact_time IS NOT NULL"
                        "AND delivery_time IS NULL", (message.from_user.id,))
    elif message.text == STATUS_BTNS[2]:
        with GetConCur(POOL) as (con, cur):
            cur.execute("SELECT pick_point_id, plan_time, delivery_time,"
                        "feedback, price, good_link, request"
                        "FROM buyouts JOIN plans on buyouts.plan_id = plans.id"
                        "WHERE user_id = %s AND delivery_time IS NOT NULL", (message.from_user.id,))
    else:
        BOT.send_message(message.from_user.id, '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞...')
        ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')
        return
    buyouts = cur.fetchall()
    if not buyouts:
        BOT.send_message(message.from_user.id, '‚ùå –ù–µ—Ç –≤—ã–∫—É–ø–æ–≤!')
        ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')
        return
    for buyout in buyouts:
        text = ''
        if buyout[0]:
            text += f'üìç ID –ü–í–ó (—Å–∫–æ—Ä–æ –∞–¥—Ä–µ—Å): {buyout[0]}\n'
        if buyout[1]:
            text += f'üïò –ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –≤—ã–∫—É–ø–∞: {FormatTime(buyout[1])}\n'
        if buyout[2]:
            text += f'üïò –ü–ª–∞–Ω–∏—Ä—É–µ–º–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {FormatTime(buyout[2])}\n'
        if buyout[3]:
            text += f'üß® –û—Ç–∑—ã–≤ : {FormatTime(buyout[3])}\n'
        if buyout[4]:
            text += f'üí∞ –¶–µ–Ω–∞: {buyout[4]}\n'
        if buyout[5]:
            text += f'üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä: {WB_PATTERN.format(buyout[5])}\n'
        if buyout[6]:
            text += f'üìù –ó–∞–ø—Ä–æ—Å: {buyout[6]}\n'
        BOT.send_message(message.from_user.id, text)
    ShowButtons(BOT, message.from_user.id, MENU_BTNS, '‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:')
